package rabbitmq.demos.request_reply;

import java.io.IOException;
import java.util.Scanner;
import java.util.concurrent.TimeoutException;

import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;

public class Requestor {

	public static void main(String[] args) throws IOException, TimeoutException, InterruptedException {
		ConnectionFactory factory = new ConnectionFactory();
        // "guest"/"guest" by default, limited to localhost connections
        factory.HostName = "localhost";
        factory.VirtualHost = "/";
        factory.Port = 5672;
        factory.UserName = "guest";
        factory.Password = "guest";

        IConnection conn = factory.CreateConnection();
        IModel channel = conn.CreateModel();

        var consumer = new EventingBasicConsumer(channel);
        consumer.Received += (sender, e) =>
          {
              string message = System.Text.Encoding.UTF8.GetString(e.Body.ToArray());
              Console.WriteLine("Response received:" + message);
          };

        channel.BasicConsume("responses", true, consumer);

        while(true)
        {
            Console.Write("Enter your request:");
            string request = Console.ReadLine();

            if (request == "exit")
                break;

            channel.BasicPublish("", "requests", null, Encoding.UTF8.GetBytes(request));
        }

        channel.Close();
        conn.Close();
	}
}
